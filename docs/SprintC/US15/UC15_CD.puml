@startuml
skinparam classAttributeIconSize 0
package Controller {
class ValidationController {
  + getTestsWithoutValidation()
  + saveValidation()
  + getTestValidationList()
  +getTestResults(code)
  +doValidation(testValidationList)
}
}
package Mappers {
class TestsReadyToValidateMapper {
  + List<String>toDTO(List<CATest> listOfTestsReadyToValidate)
}
}
package Domain {
package Model {
class Test {
  - Client client
  - List parameterList
  - Date createdAt
  - String internalCode
  - Report report
}

class Company {
  - String designation
  + Company(designation)
  + getTestStore()
}
class Parameter{
- Date createdAt
  + getCreatedAt()
}
class Report {
  - Date createdAt
  + getCreatedAt()
}

}
package Store {
class TestStore {
    - List testValidationList
    + getTestValidationList()
    + getTestsReadyToValidate()
    + saveTestsValidated()
    + getTestByCode(code)
}
}

}
package Shared {
class Notification {
   + sendEmailSMSNotification(name)
 }
 }
package UI {
class ValidationUI{
}
}




ValidationUI ..> ValidationController

ValidationController ..> TestStore
ValidationController ..> Company
ValidationController .up.> TestsReadyToValidateMapper
ValidationController ..> Test
Company "1" -> "*"Test :perform
Company "1" -> "1" TestStore : use

TestStore "1" -> "1" Test : knows

Test <-- Report
Test <-- Parameter

TestStore --> Notification : send

@enduml